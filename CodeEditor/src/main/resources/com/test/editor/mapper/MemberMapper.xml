<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.editor.mapper.MemberMapper">

	<!-- security 로그인 -->
	<resultMap type="member" id="member">
		<!-- primary -->
		<!-- column : m.memberid > property : dto의 setter의미  -->	
		<!-- primary 제외 모든것 -->
		<id property="seq" column="seq"/>
		<result property="id" column="id"/>
		<result property="pw" column="pw" />
		<result property="nick" column="nick"/>
		<result property="regdate" column="regdate"/>
		<result property="ing" column="ing"/>
		<result property="color" column="color"/>
		<result property="oAuthType" column="oAuthType"/>
		
		<collection property="teamList" resultMap="team" />
		<collection property="projectList" resultMap="project" />
		<collection property="memberTeamList" resultMap="memberTeam" />
	</resultMap>
	
	<resultMap type="team" id="team">
		<result property="seq"	column="teamSeq" />
		<result property="teamName"	column="teamName" />
		<result property="teamEx" 	column="teamEx" />
		<result property="teamType"	column="teamType" />
		<result property="regdate" 	column="regdate" />
	</resultMap>
	
	<resultMap type="project" id="project">
		<result property="projectName"	column="projectName" />
		<result property="projectEx" 	column="projectEx" />
		<result property="startDate"	column="startDate" />
		<result property="target" 	column="target" />
		<result property="priority"	column="priority" />
		<result property="regdate" 	column="regdate" />
	</resultMap>
	
	<resultMap type="memberTeam" id="memberTeam">
		<result property="team_seq"	column="team_seq" />
		<result property="project_seq" 	column="project_seq" />
		<result property="position"	column="position" />
	</resultMap>

	<!-- team과 project 정보 가져오기 -->
	
	<select id="loadUser" resultMap="member">
		select * from member where id = #{username}
	</select>
	
	<!-- mypage -->
	<select id="list" resultType="member">
		select * from member where nick = #{username}
	</select>
	
	<!-- email 중복 확인 -->
	<select id="duplicatedCheck" resultType="Integer">
		select count(*) from member where id = #{email}
	</select>
	
	<!-- nick 중복 확인 -->
	<select id="duplicatedNickCheck" resultType="Integer">
		select count(*) from member where nick = #{email}
	</select>
	
	<!-- 회원가입 -->
	<insert id="joinOk">
		insert into member (seq, id, pw, nick, regdate, ing, color, oAuthType) 
		values (seqMember.nextVal, #{id}, #{pw}, #{nick}, default, default,  
    			mod(seqMember.nextVal, 7), default) 
	</insert>
	
	<insert id="join">
		<selectKey keyProperty="seq" resultType="String" order="BEFORE">
			select seqMember.nextVal from dual
		</selectKey>
		insert into member (seq, id, pw, nick, regdate, ing, color, oAuthType) 
		values (#{seq}, #{id}, #{pw}, #{nick}, default, default,  
    			mod(#{seq}, 7), default) 
	</insert>
	
	<select id="getMaxSeq" resultType="String">
		select max(seq) from member
	</select>
	
	<insert id="callInsertDefaultSettings" statementType="CALLABLE">
	    CALL insert_default_settings(#{member_seq, jdbcType=VARCHAR})
	</insert>
		
	<!-- 이전버전 자동 로그인 -->
	<select id="username" resultType="member">
		select id from member where seq = 21 or seq = 22
	</select>
	
	<!-- 닉네임 수정하기 -->
	<update id="nickEdit">
		update member set nick = #{nick} where seq = #{seq}
	</update>
	
	<!-- 닉네임 수정 후 마이페이지 정보 불러오기 -->
	<select id="load" resultMap="member">
		select m.seq as seq, m.id as id, m.nick as nick, m.color as color, m.oAuthType as oAuthType, m.ing as ing, 
			t.seq as teamSeq, t.teamName as teamName, t.teamEx as teamEx, t.teamType as teamType, mt.position as position 
			from member m inner join memberTeam mt
			on m.seq = mt.member_seq
			inner join team t
			on mt.team_seq = t.seq where m.seq = #{seq}
	</select>
	
	<select id="getMemberProject" resultType="memberProject">
		SELECT * FROM vwMemberProject WHERE member_seq = #{member_seq}
	</select>
	
	<select id="getSelProject" resultType="memberProject">
		SELECT * FROM vwMemberProject WHERE member_seq = #{member_seq} AND team_seq = #{team_seq} 
	</select>
	
	<select id="get" resultType="member" >
		select * from member where seq = #{seq}
	</select>
	
	<select id="getAutoLoginIDs" resultType="String">
		select id from member where regexp_like(id, '^test[23]?@test.com$')
	</select>

</mapper>